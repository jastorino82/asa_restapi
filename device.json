{
  "host": "198.18.133.254",
  "username": "apiuser",
  "password": "C1sco12345",
  "modules": [
    {
      "name": "Physical Interfaces",
      "description": "Configure and verify physical interface configuration",
      "execute": true,
      "execute_function": "interfaces_physical(payload)",
      "payloads": [
	{
	  "method": "patch",
	  "description": "Modify configuration of Gi0/0",
	  "objectId": "GigabitEthernet0_API_SLASH_0",
	  "payload": {
            "kind": "object#GigabitInterface",
            "interfaceDesc": "outside interface",
            "name": "outside",
            "securityLevel": 0,
            "ipAddress": {
              "ip": {
                "kind": "IPv4Address",
                "value": "198.18.5.254"
              },
              "kind": "StaticIP",
              "netMask": {
                "kind": "IPv4NetMask",
                "value": "255.255.255.0"
              }
            },
            "shutdown": false 
          }
        },
	{
	  "method": "patch",
	  "description": "Modify configuration of Gi0/1",
	  "objectId": "GigabitEthernet0_API_SLASH_1",
	  "payload": {
            "kind": "object#GigabitInterface",
            "interfaceDesc": "inside interface",
            "name": "inside",
            "securityLevel": 100,
            "ipAddress": {
              "ip": {
                "kind": "IPv4Address",
                "value": "198.18.6.254"
              },
              "kind": "StaticIP",
              "netMask": {
                "kind": "IPv4NetMask",
                "value": "255.255.255.0"
              }
            },
            "shutdown": false 
          }
        },
	{
	  "method": "get",
	  "description": "Verify physical interface configuration of Gi0/0",
	  "objectId": "GigabitEthernet0_API_SLASH_0"
	},
	{
	  "method": "get",
	  "description": "Verify physical interface configuration of Gi0/1",
	  "objectId": "GigabitEthernet0_API_SLASH_1"
	}
      ]
    },
    {
      "name": "NTP Servers",
      "description": "Configure and verify NTP servers",
      "execute": true,
      "execute_function": "ntp_servers(payload)",
      "payloads": [
	{
	  "method": "post",
	  "description": "Configure NTP server 198.18.128.1",
	  "payload": {
            "ipAddress": "198.18.128.1",
	    "isPreferred": true
	  } 
	},
	{
	  "method": "post",
	  "description": "Configure NTP server 198.18.133.1",
	  "payload": {
            "ipAddress": "198.18.133.1",
	    "isPreferred": false 
	  }
	},
	{
	  "method": "get",
	  "description": "Verify NTP configuration"
	}
      ]
    },
    {
      "name": "DNS client",
      "description": "Configure and verify DNS client",
      "execute": true,
      "execute_function": "dns_client(payload)",
      "payloads": [
        {
	  "method": "put",
          "description": "Modify DNS client configuration",
          "payload": {	  
            "dnsLookupInterfaces": [
              "outside"
            ]
          }
        },
	{
          "method": "get",
	  "description": "Verify DNS client configuration"
	}
      ]
    },
    {
      "name": "DNS Server Groups",
      "description": "Configure and verify DNS server groups",
      "execute": true,
      "execute_function": "dns_client_servergroups(payload)",
      "payloads": [
	{
	  "method": "patch",
	  "description": "Modify the DefaultDNS server group",
	  "objectId": "DefaultDNS",
	  "payload": {
            "name": "DefaultDNS",
            "dnsServers": [
              {
                "ipAddress": "198.18.128.1",
                "interface": "outside"
              }
	    ],
	    "domainName": "dcloud.cisco.com"
          }
	},
	{
	  "method": "get",
	  "description": "Verify DNS server group configuration for DefaultDNS",
	  "objectId": "DefaultDNS"
	}
      ]
    },
    {
      "name": "Certificate Keypair",
      "description": "Configure and verify an RSA keypair",
      "execute": true,
      "execute_function": "cert_keypair(payload)",
      "payloads": [
	{
          "method": "post",
	  "description": "Add a new RSA keypair mykeypair",
	  "payload": {
            "usage": "General Purpose",
            "kind": "object#Keypair",
            "type": "rsa",
            "name": "mykeypair",
            "size": 2048
          }
	},
	{
	  "method": "get",
	  "description": "Verify RSA keypair mykeypair",
	  "objectId": "mykeypair"
	}
      ]
    },
    {
      "name": "Identity Certificate",
      "description": "Configure and verify a self signed identity certificate",
      "execute": true,
      "execute_function": "cert_identity(payload)",
      "payloads": [
        {
	  "method": "post",
	  "description": "Add a new identity certificate",
	  "payload": {
            "kind": "object#IdentityCertificate",
            "name": "my_trustpoint",
            "keyPair": "mykeypair",
            "enrollParameters": {
              "includeSerialNumber": false,
              "subjectDN": {
                "c": ["US"],
                "cn": [
                  "asa.dcloud.cisco.com"
                ],
                "ea": ["support@dcloud.cisco.com"],
                "l": ["San Jose"],
                "o": ["Cisco Systems"],
                "st": ["CA"],
                "ou": ["dCloud"]
              },
              "ipAddress": "198.18.5.254",
              "fqdn": "asa.dcloud.cisco.com",
              "email": "support@dcloud.cisco.com"
            },
            "enableCACheck": true,
            "enableProxyLDCIssuer": false,
            "selfSign": true
          }
	},
	{
	  "method": "get",
	  "description": "Verify identity certificate",
	  "objectId": "my_trustpoint"
	}
      ]
    },
    {
      "name": "Static Routing",
      "description": "Configure and verify static routing",
      "execute": true,
      "execute_function": "routing_static(payload)",
      "payloads": [
	{
          "method": "post",
	  "description": "Add a floating static default route",
	  "payload": {
            "tunneled": false,
            "kind": "object#IPv4Route",
            "distanceMetric": 250,
            "tracked": false,
            "interface": {
              "kind": "objectRef#Interface",
              "name": "outside"
            },
            "gateway": {
              "kind": "IPv4Address",
              "value": "198.18.5.1"
            },
            "network": {
              "kind": "AnyIPAddress",
              "value": "any4"
            }
          }  
	},
        {
	  "method": "get",
	  "description": "Verify static routes"
	}
      ]
    },
    {
      "name": "CLI Commands",
      "description": "CLI commands to push",
      "execute": true,
      "execute_function": "send_cli(payload)",
      "payloads": [ 
        {  
	  "method": "post",
          "description": "Configure SSL VPN",
          "payload": {
            "commands": [
              "ip local pool POOL-VPN 198.18.10.1-198.18.10.10 mask 255.255.255.0",
	      "access-list ACL-SPLIT-TUNNEL standard permit 198.18.6.0 255.255.255.0",
	      "ssl trust-point my_trustpoint outside",
	      "group-policy GP-RAVPN internal",
              "group-policy GP-RAVPN attributes",
              "vpn-tunnel-protocol ssl-client",
              "split-tunnel-policy tunnelspecified",
              "split-tunnel-network-list value ACL-SPLIT-TUNNEL",
              "address-pools value POOL-VPN",
	      "tunnel-group TG-RAVPN type remote-access",
              "tunnel-group TG-RAVPN general-attributes",
              "default-group-policy GP-RAVPN",
              "tunnel-group TG-RAVPN webvpn-attributes",
              "group-url https://198.18.5.254/ravpn enable",
	      "webvpn",
	      "enable outside",
	      "anyconnect image disk0:/anyconnect-win-4.8.03052-webdeploy-k9.pkg",
	      "anyconnect enable"
	    ]
          }
        },
        {  
	  "method": "post",
          "description": "Run CLI commands for verification",
          "payload": {
            "commands": [
              "show version",
	      "show nameif",
	      "show interface ip brief"
            ]
          }
	}
      ]  
    }
  ]
}
